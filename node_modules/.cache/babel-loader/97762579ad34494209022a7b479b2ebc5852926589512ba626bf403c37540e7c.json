{"ast":null,"code":"var _jsxFileName = \"D:\\\\PRITAM\\\\ass\\\\Mercor\\\\mercor\\\\src\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [meetingLink, setMeetingLink] = useState('');\n  const [transcript, setTranscript] = useState('');\n  const [response, setResponse] = useState('');\n  const [audio, setAudio] = useState('');\n  const joinZoomMeeting = async () => {\n    try {\n      await axios.post('/joinZoomMeeting', {\n        meetingLink\n      });\n      console.log('Successfully joined Zoom meeting');\n    } catch (error) {\n      console.error('Failed to join Zoom meeting:', error);\n    }\n  };\n  const handleSpeechToText = async audioData => {\n    // Implement code to send audio data to the backend for conversion\n    try {\n      const response = await axios.post('/speechToText', {\n        audioData\n      });\n      const transcript = response.data.transcript;\n      setTranscript(transcript);\n    } catch (error) {\n      console.error('Failed to convert audio to text:', error);\n    }\n  };\n  const handleProcessText = async () => {\n    // Implement code to send the transcript to the backend for processing with GPT\n    try {\n      const response = await axios.post('/processGPT', {\n        text: transcript\n      });\n      const gptResponse = response.data.response;\n      setResponse(gptResponse);\n    } catch (error) {\n      console.error('Failed to process text with GPT:', error);\n    }\n  };\n  const handleTextToSpeech = async () => {\n    // Implement code to send the response text to the backend for conversion to speech\n    try {\n      const response = await axios.post('/textToSpeech', {\n        text: response\n      });\n      const audioContent = response.data;\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n\n      // Decode the audio content from base64 to an ArrayBuffer\n      const audioData = Uint8Array.from(atob(audioContent), c => c.charCodeAt(0)).buffer;\n\n      // Decode the audio data into an AudioBuffer\n      const decodedAudio = await audioContext.decodeAudioData(audioData);\n\n      // Create an AudioBufferSourceNode\n      const audioSource = audioContext.createBufferSource();\n      audioSource.buffer = decodedAudio;\n\n      // Connect the audio source to the destination (speakers)\n      audioSource.connect(audioContext.destination);\n\n      // Start playing the audio\n      audioSource.start(0);\n    } catch (error) {\n      console.error('Failed to convert text to speech:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Zoom Bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Zoom meeting link\",\n      value: meetingLink,\n      onChange: e => setMeetingLink(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: joinZoomMeeting,\n      children: \"Join Zoom Meeting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Transcript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: transcript,\n        onChange: e => setTranscript(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleProcessText,\n        children: \"Process Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: audio,\n        onChange: e => setAudio(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSpeechToText,\n        children: \"Convert to text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: response,\n        onChange: e => setResponse(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTextToSpeech,\n        children: \"Convert to Speech\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ojHuhF1FIrFaGHGj7h/ChV60YB4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","meetingLink","setMeetingLink","transcript","setTranscript","response","setResponse","audio","setAudio","joinZoomMeeting","post","console","log","error","handleSpeechToText","audioData","data","handleProcessText","text","gptResponse","handleTextToSpeech","audioContent","audioContext","window","AudioContext","webkitAudioContext","Uint8Array","from","atob","c","charCodeAt","buffer","decodedAudio","decodeAudioData","audioSource","createBufferSource","connect","destination","start","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/PRITAM/ass/Mercor/mercor/src/Main.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst App = () => {\r\n  const [meetingLink, setMeetingLink] = useState('');\r\n  const [transcript, setTranscript] = useState('');\r\n  const [response, setResponse] = useState('');\r\n  const [audio, setAudio] = useState('');\r\n\r\n  const joinZoomMeeting = async () => {\r\n    try {\r\n      await axios.post('/joinZoomMeeting', { meetingLink });\r\n      console.log('Successfully joined Zoom meeting');\r\n    } catch (error) {\r\n      console.error('Failed to join Zoom meeting:', error);\r\n    }\r\n  };\r\n\r\n  const handleSpeechToText = async (audioData) => {\r\n    // Implement code to send audio data to the backend for conversion\r\n    try {\r\n      const response = await axios.post('/speechToText', { audioData });\r\n      const transcript = response.data.transcript;\r\n      setTranscript(transcript);\r\n    } catch (error) {\r\n      console.error('Failed to convert audio to text:', error);\r\n    }\r\n  };\r\n\r\n  const handleProcessText = async () => {\r\n    // Implement code to send the transcript to the backend for processing with GPT\r\n    try {\r\n      const response = await axios.post('/processGPT', { text: transcript });\r\n      const gptResponse = response.data.response;\r\n      setResponse(gptResponse);\r\n    } catch (error) {\r\n      console.error('Failed to process text with GPT:', error);\r\n    }\r\n  };\r\n\r\n  const handleTextToSpeech = async () => {\r\n    // Implement code to send the response text to the backend for conversion to speech\r\n    try {\r\n      const response = await axios.post('/textToSpeech', { text: response });\r\n      const audioContent = response.data;\r\n      \r\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n\r\n    // Decode the audio content from base64 to an ArrayBuffer\r\n    const audioData = Uint8Array.from(atob(audioContent), c => c.charCodeAt(0)).buffer;\r\n\r\n    // Decode the audio data into an AudioBuffer\r\n    const decodedAudio = await audioContext.decodeAudioData(audioData);\r\n\r\n    // Create an AudioBufferSourceNode\r\n    const audioSource = audioContext.createBufferSource();\r\n    audioSource.buffer = decodedAudio;\r\n\r\n    // Connect the audio source to the destination (speakers)\r\n    audioSource.connect(audioContext.destination);\r\n\r\n    // Start playing the audio\r\n    audioSource.start(0);\r\n    } catch (error) {\r\n      console.error('Failed to convert text to speech:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Zoom Bot</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Zoom meeting link\"\r\n        value={meetingLink}\r\n        onChange={(e) => setMeetingLink(e.target.value)}\r\n      />\r\n      <button onClick={joinZoomMeeting}>Join Zoom Meeting</button>\r\n\r\n      <div>\r\n        <h2>Transcript</h2>\r\n        <textarea\r\n          value={transcript}\r\n          onChange={(e) => setTranscript(e.target.value)}\r\n        />\r\n        <button onClick={handleProcessText}>Process Text</button>\r\n      </div>\r\n      \r\n      <div>\r\n        <h2>Audio</h2>\r\n        <textarea\r\n          value={audio}\r\n          onChange={(e) => setAudio(e.target.value)}\r\n        />\r\n        <button onClick={handleSpeechToText}>Convert to text</button>\r\n      </div>\r\n  \r\n      <div>\r\n        <h2>Response</h2>\r\n        <textarea\r\n          value={response}\r\n          onChange={(e) => setResponse(e.target.value)}\r\n        />\r\n        <button onClick={handleTextToSpeech}>Convert to Speech</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}